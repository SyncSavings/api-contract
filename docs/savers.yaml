openapi: 3.1.0

info:
  title: Savers schemas
  version: '1.0'

paths:
  /savers:
    post:
      summary: Create a new Saver
      description: Create a new Saver with Sync Savings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saver'
      responses:
        '201':
          description: The Saver has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaverWithId'
      tags:
        - Savers
  /savers/{saverId}:
    summary: ''
    parameters:
      - name: saverId
        description: The ID of the Saver
        example: 668286d72ea20e3725f813eb
        in: path
        required: true
        schema:
          type: string
    get:
      summary: View an existing Saver
      description: View a previously create Saver and their details
      responses:
        '200':
          description: The requested Saver has been found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaverWithId'
      tags:
        - Savers
    # TODO: this is just a template, can be removed if not needed
    # patch:
    #   tags:
    #     - Savers
    #   summary: Update an existing Saver
    #   description: Update an existing Saver
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/SaverUpdate'
    #   responses:
    #     200:
    #       description: The Saver has been found and updated
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/SaverWithId'

components:
  schemas:
    Saver:
      type: object
      properties:
        firstName:
          type: string
          example: Christopher
          description: The given name of the Saver.
        lastName:
          type: string
          example: Robin
          description: The family name of the Saver.
        email:
          type: string
          example: christopher.robin@sync-savings.com
          description: The email address of the Saver.
        dateOfBirth:
          type: string
          format: date
          example: '1969-12-31'
          description: The date of birth of the Saver in ISO-8601 format.
        mobileNumber:
          type: string
          pattern: /\+447\d{9}/
          example: '+447123456789'
          description: The mobile phone number of the Saver.
        address:
          type: object
          allOf:
            - $ref: '#/components/schemas/Address'
      required:
        - firstName
        - lastName
        - email
        - dateOfBirth
        - mobileNumber
        - address
    # Template/POC for how partial request bodies look when rendered
    # SaverUpdate:
    #   type: object
    #   properties:
    #     firstName:
    #       type: string
    #       example: Christopher
    #       description: The given name of the Saver.
    #     lastName:
    #       type: string
    #       example: Robin
    #       description: The family name of the Saver.
    #   minProperties: 1
    #   additionalProperties: false
    SaverWithId:
      allOf:
        - $ref: '#/components/schemas/Saver'
        - type: object
          properties:
            id:
              type: string
              example: 668286d72ea20e3725f813eb
              description: The unique identifier of the Saver
    Address:
      type: object
      properties:
        property:
          type: string
          examples:
            number:
              value: '145'
              summary: A house number.
            house:
              value: Pooh Corner
              summary: A house name.
          description: How the Saver's residence is identified.
        street:
          type: string
          example: London Street
          description: The street of the Saver's address.
        city:
          type: string
          example: London
          description: The name of the city, town, etc.
        country:
          type: string
          example: GB
          description: An ISO-3166 2-character country code.
        postCode:
          type: string
          example: EC3N 4AB
          description: Postal code for the area.
      required:
        - property
        - street
        - city
        - country
        - postCode

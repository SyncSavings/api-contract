openapi: 3.0.3
info:
  title: Sync Savings API Specification
  description: |-
    ‚ÑπÔ∏è Embedded savings is the integration of cash savings products (easy access, fixed term and flexible interest) into other digital applications without the need to redirect users to the underlying financial institution. Embedded financial services enable providers to offer seamless access to relevant financial products at the point of intent, and thus drive engagement and value to customers. Cash savings in particular drive deep engagement with customers with recent studies revealing customers checking easy access accounts on average 4 to 5 times per week and fixed term savings 2 to 3 times per week.

    üåê It is estimated that the market size of global embedded finance across the entire value chain will grow from US $264bn in 2021 to US $606bn in 2025. Recent PwC research suggests that two-thirds of global economic activity will happen within business ecosystems by 2030. Key industries of focus include mobility, healthcare, personal finance, travel and lifestyle. 

    With our unique business model and relationships across the UK banking and fintech ecosystem, Sync is the only provider of embedded cash savings products.

    üîë Authentication: The API requires authentication using API keys included in request headers (see authorize)

    Should you have any queries on the standards implemented or the capability of our services, please do let us know by emailing us at **contact@sync-savings.com**
  version: 1.0.11
externalDocs:
  description: Find out more about Sync Savings
  url: https://www.sync-savings.com/
servers:
  - url: https://dev.sync-savings.com/api
    description: Dev server
  - url: https://staging.sync-savings.com/api
    description: Staging server
  - url: https://sync-savings.com/api
    description: Production server (uses live data)
security:
  - ApiKeyAuth: []
tags:
  - name: savers
    description: A Saver is a an individual or business that can create a savings product
  - name: products
    description: A Product is a ‚Äòtype‚Äô of account (e.g. 90-Day Notice Saver). These are configured in partnership with Sync for each partner bank according to their unique product specifications.
  - name: accounts
    description: An Account is owned by a Saver. The type of an account is one of the products that are setup.
  - name: transactions
    description: A Transaction can be either a Deposit, a Withdrawal, a Movement or a Transfer. A Movement is an ‚Äòinternal‚Äô movement of funds within two accounts registered at the same bank owned by the same saver
paths:
  /v1/saver:
    post:
      tags:
        - savers
      summary: Create a saver
      description: Create a new saver
      operationId: createSaver
      requestBody:
        description: Details of the new saver
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Saver"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saver"
        "400":
          description: Invalid saver information provided supplied
        "500":
          description: Something went wrong
  /v1/saver/{saverId}:
    get:
      tags:
        - savers
      summary: Find saver by ID
      description: Returns a single saver
      operationId: getSaverById
      parameters:
        - name: saverId
          in: path
          description: ID of saver
          required: true
          schema:
            $ref: "#/components/schemas/SaverId"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saver"
        "400":
          description: Invalid ID supplied
        "404":
          description: Saver not found
        "500":
          description: Something went wrong
    put:
      tags:
        - savers
      summary: update a saver
      description: Update a saver
      operationId: updateSaver
      parameters:
        - name: saverId
          in: path
          description: ID of saver
          required: true
          schema:
            $ref: "#/components/schemas/SaverId"
      requestBody:
        description: Details of the updated saver
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Saver"
      responses:
        "202":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saver"
        "400":
          description: Invalid saver information provided supplied
        "500":
          description: Something went wrong
  /v1/products/{saverId}:
    get:
      tags:
        - products
      summary: Find products for saver
      description: Returns a single saver
      operationId: getProductsForSaver
      parameters:
        - name: saverId
          in: path
          description: ID of saver
          required: true
          schema:
            $ref: "#/components/schemas/SaverId"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "400":
          description: Invalid Saver ID supplied
        "404":
          description: Could not find saver
        "500":
          description: Something went wrong
  /v1/product/{productId}:
    get:
      tags:
        - products
      summary: Get product by ID
      description: Returns a product
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          description: ID of product
          required: true
          schema:
            $ref: "#/components/schemas/ProductId"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableProducts"
        "400":
          description: Invalid Saver ID supplied
        "404":
          description: Could not find product
        "500":
          description: Something went wrong
  /v1/account:
    post:
      tags:
        - accounts
      summary: Create an account for a saver
      description: Create an account for a saver
      operationId: createAccount
      requestBody:
        description: Details of the new account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saver"
        "400":
          description: Invalid saver information provided supplied
        "500":
          description: Something went wrong
  /v1/account/{accountId}:
    get:
      tags:
        - accounts
      summary: Get account by ID
      description: Returns an account
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: ID of account
          required: true
          schema:
            $ref: "#/components/schemas/AccountId"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Invalid account ID supplied
        "404":
          description: Could not find saver
        "500":
          description: Something went wrong
    patch:
      tags:
        - accounts
      summary: Update Interest rate methodology
      description: Update Interest rate methodology
      operationId: updateAccountInterestRate
      parameters:
        - name: accountId
          in: path
          description: ID of account
          required: true
          schema:
            $ref: "#/components/schemas/AccountId"
      requestBody:
        description: Details of the new account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInterestMethodology"
      responses:
        "202":
          description: successful operation
        "400":
          description: Invalid account ID supplied
        "404":
          description: Could not find account
        "500":
          description: Something went wrong
  /v1/transaction/{transactionId}:
    get:
      tags:
        - transactions
      summary: Get a transaction
      description: Returns a transaction
      operationId: getTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of a transaction
          required: true
          schema:
            $ref: "#/components/schemas/TransactionId"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        "400":
          description: Invalid account ID supplied
        "404":
          description: Could not find account to retrieve transactions for
        "500":
          description: Something went wrong
  /v1/transaction:
    post:
      tags:
        - transactions
      summary: Create an account transaction
      description: Create an account transaction
      operationId: createTransaction
      requestBody:
        description: Details of the new transaction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailableTransactions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableTransactions"
        "400":
          description: Could not find account
        "500":
          description: Something went wrong
  /v1/identity/plaid:
    post:
      tags:
        - identity
      summary: Create a new identity verification flow using Plaid
      description: Create a new identity verification flow using Plaid
      operationId: createIdentiyPlaid
      requestBody:
        description: Details of a new identity verification flow
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaidIdentityRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaidIdentityResult"
        "400":
          description: Invalid request
        "500":
          description: Something went wrong
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Saver:
      type: object
      required:
        - firstname
        - surname
        - knownAs
        - email
        - password
        - address
      properties:
        id:
          $ref: "#/components/schemas/SaverId"
        firstname:
          type: string
          example: Ada
        surname:
          type: string
          example: Lovelace
        knownAs:
          type: string
          example: Ada
        email:
          type: string
          example: ada.lovelace@example.com
          format: email
        password:
          type: string
          example: adaiLovesaving99
          format: password
          description: Must contain at least one numbers and a capital
          minLength: 8
          writeOnly: true
        address:
          $ref: "#/components/schemas/Address"
        profilePicture:
          type: string
          format: url
          example: https://s3-eu-east-1.amazonaws.com/saver/{firmId}/{saverId}/profile.jpg
    ReferenceId:
      type: string
      minLength: 24
      maxLength: 24
      example: "8151168891f9fca371d1a456"
    SaverId:
      type: string
      minLength: 24
      maxLength: 24
      example: "65119978f1f9fcb769de1916"
      readOnly: true
    ProductId:
      type: string
      minLength: 24
      maxLength: 24
      example: "65119978f1f9fcb769de1916"
      readOnly: true
    AccountId:
      type: string
      minLength: 24
      maxLength: 24
      example: "65119978f1f9fcb769de1916"
      readOnly: true
    TransactionId:
      type: string
      minLength: 24
      maxLength: 24
      example: "65119978f1f9fcb769de1916"
      readOnly: true
    Address:
      type: object
      required:
        - addressLine1
        - addressLine2
        - city
        - county
        - country
        - postCode
      properties:
        addressLine1:
          type: string
          example: 10
        addressLine2:
          type: string
          example: Downing St
        city:
          type: string
          example: London
        country:
          type: string
          example: England
        postCode:
          type: string
          example: SW1A 1AA
    Products:
      type: array
      items:
        $ref: "#/components/schemas/AvailableProducts"
    AvailableProducts:
      oneOf:
        - $ref: "#/components/schemas/EasyAccessProduct"
        - $ref: "#/components/schemas/FixedTermProduct"
        - $ref: "#/components/schemas/NoticeProduct"
    BaseProduct:
      type: object
      required:
        - id
        - name
        - type
        - interestSettings
      properties:
        id:
          type: string
          description: Unique id assigned on creation
          minLength: 24
          maxLength: 24
          example: "65119978f1f9fcb769de1916"
        name:
          type: string
          example: BankX ProductY
        minimumDeposit:
          type: number
          format: currency
          multipleOf: 0.01
          example: 100.49
          description: System default is ¬£0.01
        maximumDeposit:
          type: number
          format: currency
          multipleOf: 0.01
          example: 999.99
          description: System default is ¬£1,000,000.00
        minimumBalance:
          type: number
          format: currency
        maximumBalance:
          type: number
          format: currency
          multipleOf: 0.01
          example: 999.99
        interestSettings:
          $ref: "#/components/schemas/InterestSettings"
        maturityAction:
          type: string
          enum: [Reinvest, Withdraw]
          example: Withdraw
    InterestSettings:
      type: object
      required:
        - rateType
        - rateValue
      properties:
        rateType:
          type: string
          enum: [Fixed, Variable]
          example: Fixed
        rateValue:
          type: number
          description: Expressed as a decimal. E.g. 0.0506 is 5.06%
          example: 0.0506
        postingScheduleType:
          type: string
          enum:
            [
              Fixed Schedule,
              Anniversary Account Open,
              Anniversary First Transaction,
            ]
          example: Fixed Schedule
          description: System default is ‚ÄúAnniversary Account Open‚Äù
        fixedPostingSchedule:
          type: string
          enum: [Daily, Monthly, Annually]
          example: Daily
          description: Only present if postingScheduleType is ‚ÄúFixed Schedule‚Äù
        calculatedOnBalanceType:
          type: string
          enum:
            [
              Fixed Schedule,
              Average Balance,
              Minimum Balance,
              End of Day Balance,
            ]
          example: Fixed Schedule
          description: System default is ‚ÄúEnd of Day Balance‚Äù
    EasyAccessProduct:
      allOf:
        - $ref: "#/components/schemas/BaseProduct"
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [Easy Access]
              example: Easy Access
    FixedTermProduct:
      allOf:
        - $ref: "#/components/schemas/BaseProduct"
        - type: object
          required:
            - type
            - termLengthMonths
            - restrictNoticeToWorkingDay
          properties:
            type:
              type: string
              enum: [Fixed Term]
              example: Fixed Term
            termLengthMonths:
              type: number
              description: Represents number of months
              example: 24
            restrictNoticeToWorkingDay:
              type: boolean
              description: Default is false
              example: false
    NoticeProduct:
      allOf:
        - $ref: "#/components/schemas/BaseProduct"
        - type: object
          required:
            - type
            - noticeDays
          properties:
            type:
              type: string
              enum: [Notice]
              example: Notice
            noticeDays:
              type: number
              description: Represents days notice that must be given for withdrawal
              example: 90
    Account:
      type: object
      required:
        - id
        - saverId
        - potName
        - currency
        - goal
      properties:
        id:
          $ref: "#/components/schemas/AccountId"
        saverId:
          type: string
          description: ID of the saver to create account for
          minLength: 24
          maxLength: 24
          example: "65119978f1f9fcb769de1916"
        potName:
          type: string
          description: The default is the name of the product, but can be customised by the saver.
        currency:
          type: string
          enum: [GBP]
          example: GBP
          description: enum currency of the account
        balance:
          type: number
          format: currency
          multipleOf: 0.01
          example: 100.59
          readOnly: true
        pendingBalance:
          type: number
          format: currency
          multipleOf: 0.01
          example: 110.13
          readOnly: true
        interestAccrued:
          type: number
          format: currency
          multipleOf: 0.01
          example: 16.14
          readOnly: true
        goal:
          $ref: "#/components/schemas/Goal"
    Goal:
      type: object
      required:
        - motive
        - image
        - targetAmount
        - targetDate
      properties:
        motive:
          type: string
          description: Default options can be configured and made bespoke to each firm.
          example: "Holiday fund"
        image:
          type: string
          format: url
          description: Path to image. This can be uploaded by the saver or from a catalogue of pre-defined static images/icons.
          example: https://s3-eu-east-1.amazonaws.com/saver/{firmId}/{saverId}/profile.jpg
        targetAmount:
          type: number
          format: currency
          multipleOf: 0.01
          example: 100.56
          description: target amount for the account
        targetDate:
          type: string
          format: date
          example: 01-01-2026
    UpdateInterestMethodology:
      type: object
      properties:
        interestSettings:
          type: object
          properties:
            calculationFrequency:
              type: string
              enum: [Daily, Monthly, Annually]
              example: Daily
    Transactions:
      type: array
      items:
        $ref: "#/components/schemas/AvailableTransactions"
    AvailableTransactions:
      oneOf:
        - $ref: "#/components/schemas/DepositTransaction"
        - $ref: "#/components/schemas/WithdrawTransaction"
        - $ref: "#/components/schemas/MovementTransaction"
        - $ref: "#/components/schemas/TransferTransaction"
    BaseTransaction:
      type: object
      required:
        - id
        - saverId
        - amount
      properties:
        id:
          $ref: "#/components/schemas/TransactionId"
        saverId:
          $ref: "#/components/schemas/SaverId"
        accountId:
          $ref: "#/components/schemas/ReferenceId"
        type:
          type: string
          enum: [Deposit, Withdraw, Movement, Transfer]
          example: Deposit
          description: Type of the transaction
        amount:
          type: number
          format: currency
          multipleOf: 0.01
          example: 100500.99
          description: transaction amount
        createdDate:
          type: string
          format: date
          example: 2023-01-01T16:00:00Z
          description: transaction creation date
          readOnly: true
        completedDate:
          type: string
          format: date
          example: 2023-01-01T16:02:00Z
          description: transaction completion date
          readOnly: true
    DepositTransaction:
      allOf:
        - $ref: "#/components/schemas/BaseTransaction"
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [Deposit]
              example: Deposit
    WithdrawTransaction:
      allOf:
        - $ref: "#/components/schemas/BaseTransaction"
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [Withdraw]
              example: Withdraw
    MovementTransaction:
      allOf:
        - $ref: "#/components/schemas/BaseTransaction"
        - $ref: "#/components/schemas/InternalTransaction"
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [Movement]
              example: Movement
            sourceAccount:
              type: string
              description: Account ID of the source account
              example: A001ABC
            destinationAccount:
              type: string
              description: Account ID of the destination account
              example: A002ABC
    TransferTransaction:
      allOf:
        - $ref: "#/components/schemas/BaseTransaction"
        - $ref: "#/components/schemas/InternalTransaction"
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [Transfer]
              example: Transfer
    InternalTransaction:
      type: object
      required:
        - sourceAccount
        - destinationAccount
      properties:
        sourceAccount:
          type: string
          description: Account ID of the source account
          example: A001ABC
        destinationAccount:
          type: string
          description: Account ID of the destination account
          example: A002ABC
    PlaidIdentityRequest:
      type: object
      properties:
        gaveConsent:
          type: boolean
          description: has the user already accepted tos for KYC. If false the generated Link flow will ask the user to accept tos.
          example: false
        user:
          type: object
          description: Pre-captured information about the kyc user. Optional information passed here will not be re-obtained by the Plaid link flow
          properties:
            email:
              type: string
              example: acharleston@email.com
              description: An email address
            phoneNumber:
              type: string
              example: +447920111111
              description: A phone number in E.164 format.
            dateOfBirth:
              type: string
              example: 1975-01-18
              description: Date in YYYY-MM-DD RFC 3339 Section 5.6
            name:
              type: object
              required:
                - givenName
                - familyName
              properties:
                givenName:
                  type: string
                  example: Joe
                  description: A string with at least one non-whitespace character, with a max length of 100 characters.
                familyName:
                  type: string
                  example: Bloggs
                  description: A string with at least one non-whitespace character, with a max length of 100 characters.
            address:
              $ref: "#/components/schemas/PlaidAddress"
            idNumber:
              properties:
                value:
                  type: string
                  description: Value of identity document value typed in by user. Alpha-numeric, with all formatting characters stripped.
                  example: 2XXXXXXXX
                type:
                  type: string
                  description: A globally unique and human readable ID type, specific to the country and document category. For more context on this field, see Hybrid Input Validation.
                  enum:
                    [
                      ar_dni,
                      au_drivers_license,
                      au_passport,
                      br_cpf,
                      ca_sin,
                      cl_run,
                      cn_resident_card,
                      co_nit,
                      dk_cpr,
                      eg_national_id,
                      es_dni,
                      es_nie,
                      hk_hkid,
                      in_pan,
                      it_cf,
                      jo_civil_id,
                      jp_my_number,
                      ke_huduma_namba,
                      kw_civil_id,
                      mx_curp,
                      mx_rfc,
                      my_nric,
                      ng_nin,
                      nz_drivers_license,
                      om_civil_id,
                      ph_psn,
                      pl_pesel,
                      ro_cnp,
                      sa_national_id,
                      se_pin,
                      sg_nric,
                      tr_tc_kimlik,
                      us_ssn,
                      us_ssn_last_4,
                      za_smart_id,
                    ]
                  example: us_ssn
    PlaidIdentityResult:
      type: object
      required:
        - expiration
        - linkToken
        - requestId
      properties:
        expiration:
          type: string
          description: The expiration date for the link_token, in ISO 8601 format. A link_token created to generate a public_token that will be exchanged for a new access_token expires after 4 hours. A link_token created for an existing Item (such as when updating an existing access_token by launching Link in update mode) expires after 30 minutes.
          example: "2023-11-09T12:48:55Z"
        linkToken:
          type: string
          description: A link_token, which can be supplied to Link in order to initialize it and receive a public_token, which can be exchanged for an access_token.
          example: link-sandbox-a2445413-bdf9-4780-ae00-xxxxxxxxxxx
        requestId:
          type: string
          description: A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
          example: "06hLzMitKgsE8g1"
    PlaidAddress:
      type: object
      required:
        - street
        - city
        - country
      properties:
        street:
          type: string
          description: AccountThe primary street portion of an address. If the user has submitted their address, this field will always be filled.
          example: 100 Market Street
        street2:
          type: string
          description: AccountExtra street information, like an apartment or suite number.
          example: Apt 1A
        city:
          type: string
          description: AccountCityCity from the end user's address
          example: San Francisco
        region:
          type: string
          description: An ISO 3166-2 subdivision code. Related terms would be "state", "province", "prefecture", "zone", "subdivision", etc.
          example: CA
        postalCode:
          type: string
          description: AccountThe postal code for the associated address. Between 2 and 10 alphanumeric characters. For US-based addresses this must be 5 numeric digits.
          example: 94103
        country:
          type: string
          description: Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
          example: US
